<?xml version="1.0" encoding="UTF-8"?>
<!-- The contents of this file are subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this file,
   - You can obtain one at http://mozilla.org/MPL/2.0/.  -->
<transformation>
  <info>
    <name>export_daily_amo_download_stats</name>
    <description/>
    <extended_description>
The contents of this file are subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this file,
You can obtain one at http://mozilla.org/MPL/2.0/.
    </extended_description>
    <trans_version/>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <parameters>
        <parameter>
            <name>DATE</name>
            <default_value>= CURRENT_DATE</default_value>
            <description/>
        </parameter>
    </parameters>
    <log>
      <read>Output to AMO download_counts</read>
      <write>Retrieve amo_download daily aggregate</write>
      <input>Retrieve amo_download daily aggregate</input>
      <output>Output to AMO download_counts</output>
      <update>Output to AMO download_counts</update>
      <rejected>Output to AMO download_counts</rejected>
      <connection>metrics mysql</connection>
      <table>log_trans</table>
      <step_performance_table/>
      <use_batchid>Y</use_batchid>
      <use_logfield>Y</use_logfield>
      <size_limit_lines/>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>Y</unique_connections>
    <feedback_shown>N</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <clusterschemas>
    </clusterschemas>
  <modified_user>-</modified_user>
  <modified_date>2009&#47;02&#47;04 10:21:47.657</modified_date>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>amo master</name>
    <server>${AMO_MASTER_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${AMO_MASTER_DATABASE}</database>
    <port>${AMO_MASTER_PORT}</port>
    <username>${AMO_MASTER_USER}</username>
    <password>${AMO_MASTER_PASS}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.characterEncoding</code><attribute>UTF-8</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useUnicode</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>metrics mysql</name>
    <server>${METRICS_MYSQL_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${METRICS_MYSQL_NAME}</database>
    <port>${METRICS_MYSQL_PORT}</port>
    <username>${METRICS_MYSQL_USER}</username>
    <password>${METRICS_MYSQL_PASS}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.characterEncoding</code><attribute>UTF-8</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.defaultFetchSize</code><attribute>500</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useCursorFetch</code><attribute>true</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useServerPrepStmts</code><attribute>true</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useUnicode</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>metrics</name>
    <server>${VERTICA_HOST}</server>
    <type>VERTICA</type>
    <access>Native</access>
    <database>${VERTICA_DB}</database>
    <port>${VERTICA_PORT}</port>
    <username>${VERTICA_USER}</username>
    <password>${VERTICA_PASS}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SQL_CONNECT</code><attribute>SET SESSION CHARACTERISTICS AS TRANSACTION 
ISOLATION LEVEL READ COMMITTED</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>Count inserts</from><to>Log inserts</to><enabled>Y</enabled> </hop>  <hop> <from>Output to AMO download_counts</from><to>Count inserts</to><enabled>Y</enabled> </hop>  <hop> <from>Delete download records</from><to>Log deletes</to><enabled>Y</enabled> </hop>  <hop> <from>Group by addon_id</from><to>Serialize addon_versions</to><enabled>Y</enabled> </hop>  <hop> <from>Retrieve amo_download daily aggregate</from><to>Group by addon_id</to><enabled>Y</enabled> </hop>  <hop> <from>Serialize addon_versions</from><to>Output to AMO download_counts</to><enabled>Y</enabled> </hop>  </order>
  <step>
    <name>Count inserts</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>%%java.io.tmpdir%%</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>Y</give_back_row>
      <group>
      </group>
      <fields>
        <field>
          <aggregate>num_inserts</aggregate>
          <subject>addon_id</subject>
          <type>COUNT_ALL</type>
          <valuefield/>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>500</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Delete download records</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>amo master</connection>
    <execute_each_row>N</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM download_counts
WHERE date ${DATE}</sql>
    <insert_field/>
    <update_field/>
    <delete_field>download_deletes</delete_field>
    <read_field/>
    <arguments>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>100</xloc>
      <yloc>50</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Group by addon_id</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>%%java.io.tmpdir%%</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>N</give_back_row>
      <group>
        <field>
          <name>date</name>
        </field>
        <field>
          <name>addon_id</name>
        </field>
      </group>
      <fields>
        <field>
          <aggregate>addon_sources</aggregate>
          <subject>addon_source</subject>
          <type>CONCAT_STRING</type>
          <valuefield>~~~</valuefield>
        </field>
        <field>
          <aggregate>addon_source_sums</aggregate>
          <subject>addon_source_sum</subject>
          <type>CONCAT_STRING</type>
          <valuefield>~~~</valuefield>
        </field>
        <field>
          <aggregate>addon_id_sum</aggregate>
          <subject>addon_source_sum</subject>
          <type>SUM</type>
          <valuefield/>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Log deletes</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>writeToLog(&quot;m&quot;, &quot;Deleted &quot;+download_deletes+&quot; records from AMO master DB table download_counts for date &quot;+getVariable(&quot;DATE&quot;,&quot;uninitialized&quot;));
</jsScript_script>
      </jsScript>    </jsScripts>    <fields>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>100</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Log inserts</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>writeToLog(&quot;m&quot;, &quot;Inserted &quot;+num_inserts+&quot; records to AMO master DB table download_counts matching criteria date &quot;+getVariable(&quot;DATE&quot;,&quot;uninitialized&quot;));
</jsScript_script>
      </jsScript>    </jsScripts>    <fields>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>600</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Output to AMO download_counts</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>amo master</connection>
    <schema/>
    <table>download_counts</table>
    <commit>5000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
        <field>
          <column_name>addon_id</column_name>
          <stream_name>addon_id</stream_name>
        </field>
        <field>
          <column_name>count</column_name>
          <stream_name>addon_id_sum</stream_name>
        </field>
        <field>
          <column_name>src</column_name>
          <stream_name>src</stream_name>
        </field>
        <field>
          <column_name>date</column_name>
          <stream_name>date</stream_name>
        </field>
    </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>400</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Retrieve amo_download daily aggregate</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>metrics</connection>
    <sql>select
  DATE(date) as date
, addon_id
, COALESCE(REPLACE(src, &apos;invalid&apos;, &apos;null&apos;), &apos;null&apos;) as addon_source
, sum(requests) as addon_source_sum
from amo_download_requests_by_day ad
join dates d on ad.utc_date_id = d.date_id
WHERE DATE(date) ${DATE}
and src &lt;&gt; &apos;sync&apos;
and addon_id &lt;&gt; 0
group by 1,2,3
order by 1,2,3
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>50</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Serialize addon_versions</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var keys = addon_sources.split(&apos;~~~&apos;);
var values = addon_source_sums.split(&apos;~~~&apos;);
&#47;&#47; These two arrays are guaranteed to be the same length.
if (keys.length != values.length)
{
	writeToLog(&quot;e&quot;, date + &quot; : &quot; + addon_id + &quot; = &quot; + addon_id_sum);
	writeToLog(&quot;e&quot;, addon_sources + &quot; =&gt; &quot; + keys);
	writeToLog(&quot;e&quot;, addon_source_sums + &quot; =&gt; &quot; + values);
	throw new Error(&quot;Key&#47;Value array size mismatch&quot;);
}

var hash = {};
for (var i = 0; i &lt; keys.length; i++) {
	hash[keys[i]] = parseInt(values[i]);
}

var string = serialize(hash);</jsScript_script>
      </jsScript>      <jsScript>        <jsScript_type>1</jsScript_type>
        <jsScript_name>JSON functions</jsScript_name>
        <jsScript_script>function convert(string) {
    &#47;&#47; Convert a string into a 1-element array serialized in the PHP format.
    &#47;&#47; &gt;&gt;&gt; convert(&apos;foo&apos;);
    &#47;&#47; &apos;a:1:{i:0;s:3:&quot;foo&quot;;}&apos;
    return serialize([string]);
}


function serialize( mixed_value ) {
    &#47;&#47; http:&#47;&#47;kevin.vanzonneveld.net
    &#47;&#47; +   original by: Arpad Ray (mailto:arpad@php.net)
    &#47;&#47; +   improved by: Dino
    &#47;&#47; +   bugfixed by: Andrej Pavlovic
    &#47;&#47; +   bugfixed by: Garagoth
    &#47;&#47; %          note: We feel the main purpose of this function should be to ease the transport of data between php &amp; js
    &#47;&#47; %          note: Aiming for PHP-compatibility, we have to translate objects to arrays
    &#47;&#47; *     example 1: serialize([&apos;Kevin&apos;, &apos;van&apos;, &apos;Zonneveld&apos;]);
    &#47;&#47; *     returns 1: &apos;a:3:{i:0;s:5:&quot;Kevin&quot;;i:1;s:3:&quot;van&quot;;i:2;s:9:&quot;Zonneveld&quot;;}&apos;
    &#47;&#47; *     example 2: serialize({firstName: &apos;Kevin&apos;, midName: &apos;van&apos;, surName: &apos;Zonneveld&apos;});
    &#47;&#47; *     returns 2: &apos;a:3:{s:9:&quot;firstName&quot;;s:5:&quot;Kevin&quot;;s:7:&quot;midName&quot;;s:3:&quot;van&quot;;s:7:&quot;surName&quot;;s:9:&quot;Zonneveld&quot;;}&apos;

    var _getType = function( inp ) {
        var type = typeof inp, match;
        var key;
        if (type == &apos;object&apos; &amp;&amp; !inp) {
            return &apos;null&apos;;
        }
        if (type == &quot;object&quot;) {
            if (!inp.constructor) {
                return &apos;object&apos;;
            }
            var cons = inp.constructor.toString();
            if (match = cons.match(&#47;(\w+)\(&#47;)) {
                cons = match[1].toLowerCase();
            }
            var types = [&quot;boolean&quot;, &quot;number&quot;, &quot;string&quot;, &quot;array&quot;];
            for (key in types) {
                if (cons == types[key]) {
                    type = types[key];
                    break;
                }
            }
        }
        return type;
    };
    var type = _getType(mixed_value);
    var val, ktype = &apos;&apos;;

    switch (type) {
        case &quot;function&quot;: 
            val = &quot;&quot;; 
            break;
        case &quot;undefined&quot;:
            val = &quot;N&quot;;
            break;
        case &quot;boolean&quot;:
            val = &quot;b:&quot; + (mixed_value ? &quot;1&quot; : &quot;0&quot;);
            break;
        case &quot;number&quot;:
            val = (Math.round(mixed_value) == mixed_value ? &quot;i&quot; : &quot;d&quot;) + &quot;:&quot; + mixed_value;
            break;
        case &quot;string&quot;:
            val = &quot;s:&quot; + mixed_value.length + &quot;:\&quot;&quot; + mixed_value + &quot;\&quot;&quot;;
            break;
        case &quot;array&quot;:
        case &quot;object&quot;:
            val = &quot;a&quot;;
            &#47;*
            if (type == &quot;object&quot;) {
                var objname = mixed_value.constructor.toString().match(&#47;(\w+)\(\)&#47;);
                if (objname == undefined) {
                    return;
                }
                objname[1] = serialize(objname[1]);
                val = &quot;O&quot; + objname[1].substring(1, objname[1].length - 1);
            }
            *&#47;
            var count = 0;
            var vals = &quot;&quot;;
            var okey;
            var key;
            for (key in mixed_value) {
                ktype = _getType(mixed_value[key]);
                if (ktype == &quot;function&quot;) { 
                    continue; 
                }

                okey = (key.match(&#47;^[0-9]+$&#47;) ? parseInt(key) : key);
                vals += serialize(okey) +
                        serialize(mixed_value[key]);
                count++;
            }
            val += &quot;:&quot; + count + &quot;:{&quot; + vals + &quot;}&quot;;
            break;
    }
    if (type != &quot;object&quot; &amp;&amp; type != &quot;array&quot;) val += &quot;;&quot;;
    return val;
}
</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>string</name>
        <rename>src</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
